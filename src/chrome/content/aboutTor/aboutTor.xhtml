<?xml version="1.0" encoding="UTF-8"?>
<!--
   - Copyright (c) 2014, The Tor Project, Inc.
   - See LICENSE for licensing information.
   - vim: set sw=2 sts=2 ts=8 et syntax=xml:
  -->

<!DOCTYPE html [
  <!ENTITY % htmlDTD
    PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "DTD/xhtml1-strict.dtd">
  %htmlDTD;
  <!ENTITY % globalDTD SYSTEM "chrome://global/locale/global.dtd">
  %globalDTD;
  <!ENTITY % aboutTorDTD SYSTEM "chrome://torbutton/locale/aboutTor.dtd">
  %aboutTorDTD;
]>

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>&aboutTor.title;</title>
  <link rel="stylesheet" type="text/css" media="all"
        href="chrome://torbutton/skin/aboutTor.css"/>
<script type="text/javascript;version=1.7">
 <![CDATA[
function onLoad()
{
  insertPropertyStrings();

  document.addEventListener("AboutTorAdjustArrow", function() {
    adjustToolbarIconArrow();
  }, false);

  window.setTimeout( function() {
    adjustToolbarIconArrow();
    document.getElementById('sx').focus();
  }, 0);
}

function adjustToolbarIconArrow()
{
  var textElem = document.getElementById("updatePrompt");
  var arrowDiv = document.getElementById("toolbarIconArrow");
  var extDiv = document.getElementById("toolbarIconArrowExtension");
  if (textElem && arrowDiv && extDiv)
  {
    var tbXpos;
    if (document.body.hasAttribute("torbutton-xpos"))
      tbXpos = parseInt(document.body.getAttribute("torbutton-xpos"), 10);

    if (!tbXpos || isNaN(tbXpos) || (tbXpos < 0))
    {
      arrowDiv.style.display = "none";
      extDiv.style.display = "none";
      return;
    }

    // Account for content zoom and retina displays by converting to device
    // independent units.
    if ("devicePixelRatio" in window)  // FF18+
      tbXpos /= window.devicePixelRatio;

    const kArrowMargin = 6;
    arrowDiv.style.display = "block";  // Must be visible to get offsetWidth.
    var arrowHalfWidth = arrowDiv.offsetWidth / 2.0;
    var leftAnchor = textElem.offsetLeft - kArrowMargin - arrowHalfWidth;
    var rightAnchor = textElem.offsetLeft + textElem.offsetWidth
                      + kArrowMargin + arrowHalfWidth;

    var arrowDisplay = "block";
    var extDisplay = "block";
    if (tbXpos < leftAnchor)
    {
      // Toolbar button to left of text.
      arrowDiv.setAttribute("pos", "left");
      arrowDiv.style.left = (tbXpos - arrowHalfWidth) + "px";
      var extLeft = tbXpos + arrowHalfWidth;
      extDiv.style.left = extLeft + "px";
      extDiv.style.width = (textElem.offsetLeft - extLeft - kArrowMargin) + "px";
    }
    else if ((tbXpos > rightAnchor) &&
             (tbXpos < (window.innerWidth - arrowHalfWidth)))
    {
      // Toolbar button to right of text.
      arrowDiv.setAttribute("pos", "right");
      arrowDiv.style.left = (tbXpos - arrowHalfWidth) + "px";
      var extLeft = rightAnchor - arrowHalfWidth;
      extDiv.style.left = extLeft + "px";
      extDiv.style.width = (tbXpos - arrowHalfWidth - extLeft) + "px";
    }
    else if ((tbXpos >= leftAnchor) && (tbXpos <= rightAnchor))
    {
      // Toolbar button in middle about text; use arrow without a tail.
      arrowDiv.setAttribute("pos", "middle");
      arrowDiv.style.left = (tbXpos - arrowHalfWidth) + "px";
      extDisplay = "none";
    }
    else  // Unable to display arrow (e.g., toolbar button is above sidebar).
    {
      arrowDisplay = "none";
      extDisplay = "none";
    }

    arrowDiv.style.display = arrowDisplay;
    extDiv.style.display = extDisplay;
  }
}

function insertPropertyStrings()
{
  try {
    var kPropertiesURL = "chrome://torbutton/locale/aboutTor.properties";

    Components.utils.import("resource://gre/modules/Services.jsm");
    var gStringBundle = Services.strings.createBundle(kPropertiesURL);
    var s1 = gStringBundle.GetStringFromName("aboutTor.searchSP.privacy.link");
    var s2 = gStringBundle.GetStringFromName("aboutTor.searchSP.search.link");
    var result = gStringBundle.formatStringFromName("aboutTor.searchSP.privacy",
                  [s1, s2], 2);
    if (result) {
      var elem = document.getElementById("searchProviderInfo");
      if (elem)
        elem.innerHTML = result;
    }
  } catch(e) {};
}

window.addEventListener("pageshow", function() {
  let evt = new CustomEvent("AboutTorLoad", { bubbles: true });
  document.dispatchEvent(evt);
});

]]>
</script>
</head>
<body dir="&locale.dir;" onload="onLoad();">
<div id="torstatus" class="top">
  <div id="torstatus-version"/>
  <div id="torstatus-image"/>
  <div id="torstatus-on-container" class="hideIfTorOff torstatus-container">
    <h1>&aboutTor.success.label;</h1>
    <br/>
    <h2 id="success2">&aboutTor.success2.label;</h2>
    <br/>
    <h3 class="hideIfTBBNeedsUpdate">&aboutTor.success3.label;</h3>
    <br/>
    <a id="testTorSettings" href="about:blank">&aboutTor.check.label;</a>
  </div>
  <div id="torstatus-off-container" class="hideIfTorOn torstatus-container">
    <h1>&aboutTor.failure.label;</h1>
    <br/>
    <h2>&aboutTor.failure2.label;</h2>
    <br/>
    <h3>&aboutTor.failure3prefix.label;<a href="mailto:&aboutTor.failure3Link;"
>&aboutTor.failure3Link;</a>&aboutTor.failure3suffix.label;</h3>
  </div>
</div>
<div class="top">
  <div class="hideIfTorIsUpToDate">
    <h1 class="hideIfTorOff">&aboutTor.outOfDateTorOn.label;</h1>
    <h1 class="hideIfTorOn">&aboutTor.outOfDateTorOff.label;</h1>
    <h3 id="updatePrompt">&aboutTor.outOfDate2.label;</h3>
    <div id="toolbarIconArrow"/>
    <div id="toolbarIconArrowExtension"/>
  </div>
</div>

<div class="searchbox hideIfTorOff"> <!-- begin form based search -->
  <form action="&aboutTor.searchSPPost.link;" method="post">
  <div id="sxw">
    <div id="sbutton">
      <input name="b" id="sb" value="" title="&aboutTor.search.label;"
             alt="&aboutTor.search.label;" type="submit"/>
    </div>
    <input name="q" autocomplete="off" id="sx" type="text"/>
  </div>
  <h4 id="searchProviderInfo" />
  </form>
</div>

<div class="hideIfTorOn" style="height:100px"/>

<div id="middle" class="hideIfTorOff">
  <div class="container two">
    <h1>&aboutTor.whatnextQuestion.label;</h1>
    <p>&aboutTor.whatnextAnswer.label;</p>
    <a class="tips" href="&aboutTor.whatnext.link;">&aboutTor.whatnext.label;</a>
  </div>

  <div class="container three">
    <h1>&aboutTor.helpInfo1.label;</h1>
    <p>&aboutTor.helpInfo2.label;</p>
    <ul>
      <li><a href="&aboutTor.helpInfo3.link;">&aboutTor.helpInfo3.label;</a></li>
      <li><a href="&aboutTor.helpInfo4.link;">&aboutTor.helpInfo4.label;</a></li>
      <li><a href="&aboutTor.helpInfo5.link;">&aboutTor.helpInfo5.label;</a></li>
    </ul>
  </div>
</div> <!-- middle -->

<div id="bottom">
  <p>&aboutTor.footer.label;
<a href="&aboutTor.learnMore.link;">&aboutTor.learnMore.label;</a></p>
</div>

</body>
</html>
